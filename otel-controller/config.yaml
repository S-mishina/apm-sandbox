apiVersion: opentelemetry.io/v1beta1
kind: OpenTelemetryCollector
metadata:
  name: simplest1
  namespace: monitoring
spec:
  mode: deployment
  podAnnotations:
    prometheus.io/scrape: 'true'
    prometheus.io/port: '8888'
  image: otel/opentelemetry-collector-contrib:0.108.0
  args:
    feature-gates: "-component.UseLocalHostAsDefaultHost"
  config:
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: "0.0.0.0:4317"
          http:
            endpoint: "0.0.0.0:4318"
    exporters:
      otlp:
        endpoint: "tempo-simplest-distributor.my-tempo:4317"
        tls:
          insecure: true
      prometheusremotewrite:
        endpoint: http://prometheus-operated.monitoring:9090/api/v1/write
        target_info:
          enabled: true
      # otlphttp:
      #   endpoint: https://otlp.nr-data.net:4317
      #   headers:
      #     api-key: <api-key>
      debug:
    processors:
      k8sattributes:
        auth_type: serviceAccount
        extract:
          metadata:
            - k8s.deployment.name
      transform/processing_trace_span_names:
        trace_statements:
          - context: span
            statements:
              - set(name, Concat([name, attributes["http.url"]], " "))
                where (name == "GET" or name == "POST" or name == "PUT" or name == "DELETE") and attributes["istio.cluster_id"] != "Kubernetes"
      attributes:
        actions:
          - key: http.route
            action: insert
            from_attribute: http.url
    service:
      pipelines:
        traces:
          receivers: [otlp]
          processors: [k8sattributes,transform/processing_trace_span_names,attributes]
          # exporters: [otlp,otlphttp]
          exporters: [otlp]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: simplest1-collector
  namespace: monitoring
