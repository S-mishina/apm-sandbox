apiVersion: apps/v1
kind: Deployment
metadata:
  name: sandbox-app
  namespace: sample-app
  labels:
    app: sandbox-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sandbox-app
  template:
    metadata:
      labels:
        app: sandbox-app
        test: "1"
      annotations:
        sidecar.istio.io/inject: "true"
        instrumentation.opentelemetry.io/inject-python: "true"
        instrumentation.opentelemetry.io/container-names: "sandbox-app"
    spec:
      containers:
      - name: sandbox-app
        image: ghcr.io/s-mishina/test-otel-app:latest
        ports:
        - containerPort: 8080
        env:
        - name: HTTP_FLG
          value: "true"
        - name: API_URL
          value: "http://sandbox-app1:8081"
        - name: OTEL_LOG_LEVEL
          value: "DEBUG"
        # bash sleep
        command: ["python","main.py"]
---
apiVersion: v1
kind: Service
metadata:
  name: sandbox-app
  namespace: sample-app
  labels:
    app: sandbox-app
spec:
  selector:
    app: sandbox-app
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sandbox-app1
  namespace: sample-app
  labels:
    app: sandbox-app1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sandbox-app1
  template:
    metadata:
      labels:
        app: sandbox-app1
        test: "2"
      annotations:
        sidecar.istio.io/inject: "true"
        instrumentation.opentelemetry.io/inject-python: "true"
        instrumentation.opentelemetry.io/container-names: "sandbox-app1"
    spec:
      containers:
      - name: sandbox-app1
        image: ghcr.io/s-mishina/test-otel-app:latest
        ports:
        - containerPort: 8080
        env:
        - name: HTTP_FLG
          value: "false"
        - name: API_URL
          value: "dummy"
        - name: OTEL_LOG_LEVEL
          value: "DEBUG"
        command: ["python","main.py"]
---
apiVersion: v1
kind: Service
metadata:
  name: sandbox-app1
  namespace: sample-app
  labels:
    app: sandbox-app1
spec:
  selector:
    app: sandbox-app1
  ports:
    - protocol: TCP
      port: 8081
      targetPort: 8080
  type: ClusterIP
---
apiVersion: opentelemetry.io/v1alpha1
kind: Instrumentation
metadata:
  name: python-instrumentation
  namespace: sample-app
spec:
  exporter:
    endpoint: http://simplest1-collector.monitoring:4318
  env:
  propagators:
    - tracecontext
  python:
    env:
      - name: OTEL_PYTHON_LOGGING_AUTO_INSTRUMENTATION_ENABLED
        value: 'true'
      - name: OTEL_EXPORTER_OTLP_TRACES_PROTOCOL
        value: http/protobuf
  java:
    env:
      - name: OTEL_EXPORTER_OTLP_TRACES_PROTOCOL
        value: http/protobuf
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sandbox-app2
  namespace: sample-app
  labels:
    app: sandbox-app2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sandbox-app2
  template:
    metadata:
      labels:
        app: sandbox-app2
        test: "2"
      annotations:
        sidecar.istio.io/inject: "true"
        instrumentation.opentelemetry.io/inject-java: "true"
        instrumentation.opentelemetry.io/container-names: "sandbox-app2"
    spec:
      containers:
      - name: sandbox-app2
        image: ghcr.io/s-mishina/spring-boot-jmx-metrics-sample:latest
        ports:
        - containerPort: 8080
        command: ["java","-jar","/app.jar"]
        env:
        - name: TEST_ENDPOINT
          value: "http://sandbox-app.sample-app:8080"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sandbox-app3
  namespace: sample-app
  labels:
    app: sandbox-app3
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sandbox-app3
  template:
    metadata:
      labels:
        app: sandbox-app3
        test: "2"
      annotations:
        sidecar.istio.io/inject: "true"
        instrumentation.opentelemetry.io/inject-java: "true"
        instrumentation.opentelemetry.io/container-names: "sandbox-app3"
    spec:
      containers:
      - name: sandbox-app2
        image: ghcr.io/s-mishina/thread_pool_task_executor_sandbox:latest
        ports:
        - containerPort: 8080
        command: ["java","-jar","/app.jar"]
        env:
        - name: TEST_ENDPOINT
          value: "http://sandbox-app.sample-app:8080"
